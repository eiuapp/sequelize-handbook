<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>associations on Sequelize</title><link>https://eiuapp.github.io/sequelize-handbook/docs/example/associations/</link><description>Recent content in associations on Sequelize</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://eiuapp.github.io/sequelize-handbook/docs/example/associations/index.xml" rel="self" type="application/rss+xml"/><item><title>belongsTo</title><link>https://eiuapp.github.io/sequelize-handbook/docs/example/associations/belongsTo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eiuapp.github.io/sequelize-handbook/docs/example/associations/belongsTo/</guid><description>targetKey var User = this.sequelize.define(&#39;user&#39;, {/* attributes */}) , Company = this.sequelize.define(&#39;company&#39;, {/* attributes */}); User.belongsTo(Company, {foreignKey: &#39;fk_companyname&#39;, targetKey: &#39;name&#39;}); // 为User 添加 fk_companyname 目标键 表示
User 表的 fk_companyname = Company 表的 name，
这个时候，company 表的 主键，不一定是 name, 可以是其它的列</description></item><item><title>hasOne</title><link>https://eiuapp.github.io/sequelize-handbook/docs/example/associations/hasOne/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eiuapp.github.io/sequelize-handbook/docs/example/associations/hasOne/</guid><description>foreignKey hasOne 或者 hasMany 的 foreignKey 都是 目标模型 belongsTo 或者 belongsToMany 的 foreignKey 都是 源模型
Project.hasOne(User, { foreignKey: &#39;initiator_id&#39; }) 这个定义 的意思是：
Project.Id = User表中的 外键 initiator_id 的值, 而不是 User 表中的 project_id
如果想对一个表做两次连接查询 Team.hasOne(Game, {as: &#39;HomeTeam&#39;, foreignKey : &#39;homeTeamId&#39;}); Team.hasOne(Game, {as: &#39;AwayTeam&#39;, foreignKey : &#39;awayTeamId&#39;}); 是指
Game 中的 homeTeamId 值 = Team 表中的 id
的 同时： Game 中的 awayTeamId 值 = Team 表中的 id</description></item><item><title>scope</title><link>https://eiuapp.github.io/sequelize-handbook/docs/example/associations/scope/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eiuapp.github.io/sequelize-handbook/docs/example/associations/scope/</guid><description>https://itbilu.com/nodejs/npm/41qaV3czb.html#associations-scopes
hasMany scope this.Image.hasMany(this.Comment, { foreignKey: &#39;commentable_id&#39;, constraints: false, scope: { commentable: &#39;image&#39; } }); 表示
Image.id = comment.commentable_id 而且 comment.commentable = &amp;lsquo;image&amp;rsquo;;
this.Comment.belongsTo(this.Image, { foreignKey: &#39;commentable_id&#39;, constraints: false, as: &#39;image&#39; }); 就表示
comment.commentable_id = image.id
ItemTag ItemTag = sequelize.define(&amp;lsquo;item_tag&amp;rsquo;, { tag_id: { type: DataTypes.INTEGER, unique: &amp;lsquo;item_tag_taggable&amp;rsquo; }, taggable: { type: DataTypes.STRING, unique: &amp;lsquo;item_tag_taggable&amp;rsquo; }, taggable_id: { type: DataTypes.INTEGER, unique: &amp;lsquo;item_tag_taggable&amp;rsquo;, references: null } });
Post.belongsToMany(Tag, { through: { model: ItemTag, unique: false, scope: { taggable: &amp;lsquo;post&amp;rsquo; } }, foreignKey: &amp;lsquo;taggable_id&amp;rsquo;, constraints: false });</description></item></channel></rss>