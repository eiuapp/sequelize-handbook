(function(){const pages=[{"idx":0,"href":"/sequelize-handbook/docs/example/associations/","title":"associations","content":" belongsTo hasOne scope associate  "},{"idx":1,"href":"/sequelize-handbook/docs/example/","title":"Example Site","content":" 模型（表）之间的关系/关联  "},{"idx":2,"href":"/sequelize-handbook/docs/resource/sequelize-docs/","title":"Sequelize 中文API文档","content":" Sequelize 中文API文档 Sequelize 中文文档整理（v5版本） Sequelize 中文API文档－v4  1. 快速入门、Sequelize类 2. Model 的定义、使用与Model类的API 3. 模型（表）之间的关系/关联  "},{"idx":3,"href":"/sequelize-handbook/docs/example/associations/belongsTo/","title":"belongsTo","content":" targetKey var User = this.sequelize.define('user', {/* attributes */}) , Company = this.sequelize.define('company', {/* attributes */}); User.belongsTo(Company, {foreignKey: 'fk_companyname', targetKey: 'name'}); // 为User 添加 fk_companyname 目标键  表示\nUser 表的 fk_companyname = Company 表的 name，\n这个时候，company 表的 主键，不一定是 name, 可以是其它的列\n"},{"idx":4,"href":"/sequelize-handbook/docs/example/associations/hasOne/","title":"hasOne","content":" foreignKey  hasOne 或者 hasMany 的 foreignKey 都是 目标模型 belongsTo 或者 belongsToMany 的 foreignKey 都是 源模型\nProject.hasOne(User, { foreignKey: 'initiator_id' })   这个定义 的意思是：\nProject.Id = User表中的 外键 initiator_id 的值, 而不是 User 表中的 project_id\n如果想对一个表做两次连接查询 Team.hasOne(Game, {as: 'HomeTeam', foreignKey : 'homeTeamId'}); Team.hasOne(Game, {as: 'AwayTeam', foreignKey : 'awayTeamId'});  是指\n Game 中的 homeTeamId 值 = Team 表中的 id\n的 同时： Game 中的 awayTeamId 值 = Team 表中的 id\n  转化成 sql ，则是：\nselect * from Team inner join Game AS HomeTeam on HomeTeam.homeTeamId=Team.id inner join Game As AwayTeam on AwayTeam.awayTeamId = Team.id  "},{"idx":5,"href":"/sequelize-handbook/docs/example/associations/scope/","title":"scope","content":" https://itbilu.com/nodejs/npm/41qaV3czb.html#associations-scopes\nhasMany scope this.Image.hasMany(this.Comment, { foreignKey: 'commentable_id', constraints: false, scope: { commentable: 'image' } });  表示\nImage.id = comment.commentable_id 而且 comment.commentable = \u0026lsquo;image\u0026rsquo;;\nthis.Comment.belongsTo(this.Image, { foreignKey: 'commentable_id', constraints: false, as: 'image' });  就表示\ncomment.commentable_id = image.id\nItemTag ItemTag = sequelize.define(\u0026lsquo;item_tag\u0026rsquo;, { tag_id: { type: DataTypes.INTEGER, unique: \u0026lsquo;item_tag_taggable\u0026rsquo; }, taggable: { type: DataTypes.STRING, unique: \u0026lsquo;item_tag_taggable\u0026rsquo; }, taggable_id: { type: DataTypes.INTEGER, unique: \u0026lsquo;item_tag_taggable\u0026rsquo;, references: null } });\nPost.belongsToMany(Tag, { through: { model: ItemTag, unique: false, scope: { taggable: \u0026lsquo;post\u0026rsquo; } }, foreignKey: \u0026lsquo;taggable_id\u0026rsquo;, constraints: false });\nTag.belongsToMany(Post, { through: { model: ItemTag, unique: false }, foreignKey: \u0026lsquo;tag_id\u0026rsquo; });\n"},{"idx":6,"href":"/sequelize-handbook/docs/example/associations/associate/","title":"Associate","content":" associate 使用 User.associate = function(models) { User.belongsTo(models.Company, {foreignKey: 'companyId', as: 'company'}) };  出自于：\n https://medium.com/@eth3rnit3/sequelize-relationships-ultimate-guide-f26801a75554 https://github.com/1134506391/egg-rbac  "},{"idx":7,"href":"/sequelize-handbook/docs/","title":"Docs","content":""},{"idx":8,"href":"/sequelize-handbook/","title":"Introduction","content":" 学习笔记 内容介绍 关于 sequelize , 主要包括一些学习笔记\n访问方式 请点击下面的链接阅读:\n 在线阅读：hugo格式，界面清爽。 @github：源码托管于github，如有谬误或需讨论，请提issue，欢迎提交PR  版权申明 本笔记内容可以任意转载，但请注明来源并提供链接，请勿用于商业出版。\n"}];window.bookSearch={pages:pages,idx:lunr(function(){this.ref("idx");this.field("title");this.field("content");pages.forEach(this.add,this);}),}})();