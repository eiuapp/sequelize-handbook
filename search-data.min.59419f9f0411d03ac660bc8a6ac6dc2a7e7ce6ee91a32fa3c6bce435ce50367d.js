(function(){const pages=[{"idx":0,"href":"/sequelize-handbook/docs/example/associations/","title":"associations","content":" hasOne  "},{"idx":1,"href":"/sequelize-handbook/docs/example/","title":"Example Site","content":" 模型（表）之间的关系/关联  "},{"idx":2,"href":"/sequelize-handbook/docs/resource/sequelize-docs/","title":"Sequelize 中文API文档","content":" Sequelize 中文API文档 Sequelize 中文文档整理（v5版本） Sequelize 中文API文档－v4  1. 快速入门、Sequelize类 2. Model 的定义、使用与Model类的API 3. 模型（表）之间的关系/关联  "},{"idx":3,"href":"/sequelize-handbook/docs/example/associations/hasOne/","title":"hasOne","content":" foreignKey Project.hasOne(User, { foreignKey: 'initiator_id' })  这个定义 的意思是：\nUser表中的 外键 initiator_id 的值 = Project.Id\n如果想对一个表做两次连接查询 Team.hasOne(Game, {as: 'HomeTeam', foreignKey : 'homeTeamId'}); Team.hasOne(Game, {as: 'AwayTeam', foreignKey : 'awayTeamId'});  是指\n Game 中的 homeTeamId 值 = Team 表中的 id\n的 同时： Game 中的 awayTeamId 值 = Team 表中的 id\n  转化成 sql ，则是：\nselect * from Team inner join Game AS HomeTeam on HomeTeam.homeTeamId=Team.id inner join Game As AwayTeam on AwayTeam.awayTeamId = Team.id  "},{"idx":4,"href":"/sequelize-handbook/docs/","title":"Docs","content":""},{"idx":5,"href":"/sequelize-handbook/","title":"Introduction","content":" 学习笔记 内容介绍 关于 sequelize , 主要包括一些学习笔记\n访问方式 请点击下面的链接阅读:\n 在线阅读：hugo格式，界面清爽。 @github：源码托管于github，如有谬误或需讨论，请提issue，欢迎提交PR  版权申明 本笔记内容可以任意转载，但请注明来源并提供链接，请勿用于商业出版。\n"}];window.bookSearch={pages:pages,idx:lunr(function(){this.ref("idx");this.field("title");this.field("content");pages.forEach(this.add,this);}),}})();